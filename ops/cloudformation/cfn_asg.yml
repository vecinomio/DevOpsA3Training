# For manual creation/update use:
# aws cloudformation deploy --stack-name web-asg-layer                         \
#                           --template-file ops/cloudformation/cfn_asg.yml     \
#                           --parameter-overrides                              \
#                             VPCStackName=DevVPC | ProdVPC                    \
#                             HostedZoneName=<HostedZoneName><devopsa3.me.uk.> \
#                           --profile <profile>
---
AWSTemplateFormatVersion: "2010-09-09"

Description: "ASG for private subnet."

Parameters:
  VPCStackName:
    Type: String
    AllowedValues: [ DevVPC, ProdVPC ]
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: aveli-asg
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    Default: 0.0.0.0/0
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  HTTPLocation:
    Description: The IP address range that can be used for HTTP/HTTPS requests
    Type: String
    Default: 0.0.0.0/0
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  InstanceType:
    Type: String
    Description: Type of EC2 instance.
    Default: t2.micro
    AllowedValues: [ t2.micro, t2.small, t2.medium ]
    ConstraintDescription: Must be a valid EC2 instance type.
  HostedZoneName:
    Type: String
    Description: Project hosted zone.
  SSLCertificate:
    Type: String
    Default: 'arn:aws:acm:us-east-1:054017840000:certificate/98dbbe8d-d6a8-47c0-ad7a-9a25928a806e'
#    Default: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:certificate/98dbbe8d-d6a8-47c0-ad7a-9a25928a806e"
    Description: ARN of Certificate attached to LB

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0b69ea66ff7391e80 # Amazon Linux 2
    us-west-1:
      AMI: ami-0245d318c6788de52 # Amazon Linux 2

Resources:
  webAutoScalingSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP, HTTPS, SSH access
      VpcId:
        Fn::ImportValue: !Sub "${VPCStackName}-VPCId"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref HTTPLocation
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref HTTPLocation

  LaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash -x
            echo -------------------------START-----------------------------
            PATH=$PATH:/opt/aws/bin/
            yum -y update
            yum -y install httpd
            PrivateIP=`curl http://169.254.169.254/latest/meta-data/local-ipv4`
            echo "<html><body bgcolor=black><center><font color=gold> \
            <h1>Server IP is: $PrivateIP</h1></center> \
            </body></html>" > /var/www/html/index.html
            systemctl start httpd
            systemctl enable httpd
            usermod -a -G apache ec2-user
            chown -R ec2-user:apache /var/www
            chmod 2775 /var/www
            curl -sS http://localhost
            cfn-signal -e $? --stack ${AWS::StackName} --resource webAppASG --region ${AWS::Region}
            echo -------------------------END-----------------------------
      AssociatePublicIpAddress: "false"
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref webAutoScalingSecurityGroup

  webAppASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: webAppASG
      MinSize: "1"
      MaxSize: "3"
      DesiredCapacity: "2"
      TargetGroupARNs:
        - Fn::ImportValue: "alb-tgWeb-ARN"
      HealthCheckGracePeriod: 300
      LaunchConfigurationName: !Ref LaunchConfig
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${VPCStackName}-PrivateSubnet0"
        - Fn::ImportValue: !Sub "${VPCStackName}-PrivateSubnet1"
      Tags:
        - Key: "Name"
          Value: "aveli-ASG"
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: 2
        Timeout: "PT20M"
