# To Create ALB Stack:
# aws cloudformation deploy --stack-name alb --template-file ops/cloudformation/alb.yml --parameter-overrides VPCStackName=DevVPC Environment=Dev
---
  AWSTemplateFormatVersion: "2010-09-09"

  Description: "Creates: ALB Security Group, App Load Balacer"

  Parameters:
    VPCStackName:
      Type: String
      AllowedValues: [ DevVPC, ProdVPC ]
    Environment:
      Type: String
      Description: Dev or Prod
      AllowedValues: [ Dev, Prod ]

  Resources:
    ALBSecurityGroup:
      Type: 'AWS::EC2::SecurityGroup'
      Properties:
        GroupDescription: Enable HTTP and HTTPS access via ports 80 and 443
        VpcId:
          Fn::ImportValue: !Sub '${VPCStackName}-VPCId'
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 443
            ToPort: 443
            CidrIp: 0.0.0.0/0
        Tags:
          - Key: 'Name'
            Value: 'ALBsg'
          - Key: 'Environment'
            Value: !Ref Environment

    AppLoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        IpAddressType: 'ipv4'
        Name: 'A3-ALB'
        Scheme: 'internet-facing'
        SecurityGroups:
          - Ref: ALBSecurityGroup
        Subnets:
          - Fn::ImportValue: !Sub '${VPCStackName}-PublicSubnet0'
          - Fn::ImportValue: !Sub '${VPCStackName}-PublicSubnet1'
        Tags:
          - Key: 'Name'
            Value: 'AppLB'
          - Key: 'Environment'
            Value: !Ref Environment

  Outputs:
    AppLoadBalancerARN:
      Description: 'ARN of the ALB'
      Value: !Ref AppLoadBalancer
      Export:
        Type: String
        Name: !Sub '${AWS::StackName}-ALB-ARN'
    AppLoadBalancerDNSName:
      Description: 'The original DNS Name of the ALB'
      Value: !GetAtt AppLoadBalancer.DNSName
      Export:
        Type: String
        Name: !Sub '${AWS::StackName}-ALB-DNSName'
