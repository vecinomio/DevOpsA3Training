# Creates an ASG 1:1 for Jenkins, attaching or creating persistent volume.
#
# aws cloudformation deploy --template-file jenkins.yml --stack-name jenkins --parameter-overrides VPCStackName=DevVPC --capabilities CAPABILITY_IAM
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of the SSH keypair to use for the EC2 instances.
    Default: imaki_NVirginia

  VPCStackName:
    Type: String
    MinLength: 1

  InstanceType:
    Type: String
    Description: Type of EC2 instance
    Default: t2.micro
    ConstraintDescription: Must be a valid EC2 instance type.

  S3Path:
    Type: String
    Description: The S3 path
    Default: devopsa3

  Service:
    Type: String
    Description: lifecycle policy tag
    Default: jenkins

  Environment:
    Type: String
    Description: Normally - ci
    Default: ci

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0b69ea66ff7391e80
    us-west-1:
      AMI: ami-0245d318c6788de52

Resources:
  JenkinsSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        VpcId:
          Fn::ImportValue: !Sub "${VPCStackName}-VPCId"
        GroupDescription: SSH, HTTP
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  JenkinsRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole

      Policies:
        - PolicyName: Jenkins
          PolicyDocument:
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - iam:CreateInstanceProfile
                  - iam:CreateRole
                  - iam:DeleteRolePolicy
                  - iam:DeleteRole
                  - iam:PutRolePolicy
                  - iam:RemoveRoleFromInstanceProfile
                  - iam:AddRoleToInstanceProfile
                  - iam:PassRole
                  - autoscaling:CreateLaunchConfiguration
                  - autoscaling:DescribeLaunchConfigurations
                  - autoscaling:CreateAutoScalingGroup
                  - autoscaling:UpdateAutoScalingGroup
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:DescribeScalingActivities
                  - autoscaling:PutScalingPolicy
                  - autoscaling:DeletePolicy
                  - autoscaling:DeleteAutoScalingGroup
                  - autoscaling:DeleteLaunchConfiguration
                  - ec2:DescribeTags
                  - ec2:DescribeSnapshots
                  - ec2:DescribeVolumes
                  - ec2:DescribeAddresses
                  - ec2:DescribeKeyPairs
                  - ec2:CreateVolume
                  - ec2:CreateTags
                  - ec2:AttachVolume
                  - ec2:AssociateAddress
                  - ec2:CreateSecurityGroup
                  - ec2:DescribeSecurityGroups
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:DescribeAccountAttributes
                  - ec2:DeleteSecurityGroup

  JenkinsProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: JenkinsRole

  JenkinsLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      IamInstanceProfile: !Ref JenkinsProfile
      KeyName: !Ref KeyPairName
      SecurityGroups:
      - Ref: JenkinsSecurityGroup
      InstanceType: !Ref InstanceType
      AssociatePublicIpAddress: True
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -o errexit
          set -o nounset
          set -o xtrace
          set -o pipefail

          rpm -Uvh https://yum.puppet.com/puppet5-release-el-7.noarch.rpm
          yum -y update
          yum install -y puppet-agent
          export PATH=$PATH:/opt/aws/bin/:/opt/puppetlabs/bin/:/opt/puppetlabs/puppet/bin

          aws s3 cp "s3://${S3Path}/scripts/jenkins/puppet-{ver}.tar" .
          tar -C /etc/puppetlabs/puppet -xvf puppet-{ver}.tar
          puppet --test apply site.pp

          curl -sS http://localhost:8080

  JenkinsAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${VPCStackName}-PublicSubnet0"
      LaunchConfigurationName: !Ref JenkinsLaunchConfig
      MinSize: '1'
      MaxSize: '1'
      TargetGroupARNs:
        - Fn::ImportValue: alb-tgJenkins-ARN
      Tags:
        - Key: 'Name'
          Value: 'Jenkins'
          PropagateAtLaunch: true
        - Key: 'Environment'
          Value: !Ref Environment
          PropagateAtLaunch: true
        - Key: 'Service'
          Value: !Ref Service
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: "PT20M"
